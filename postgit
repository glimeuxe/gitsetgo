#!/bin/bash

repo_url=$(git remote get-url origin 2>/dev/null)

if [[ -z "$repo_url" ]]; then
	echo "❌ Failed to find repository"
	exit 1
fi

repo_name=$(basename "${repo_url%.git}")

if ! git diff --quiet; then
	read -p "Detected unstaged changes, stash changes before pulling? Enter 'Y' or 'N': " stash_changes
	if [[ "$stash_changes" =~ ^[Yy]$ ]]; then
		if ! git stash; then
			echo "❌ Failed to stash changes"
			exit 1
		fi
		echo "✅ Stashed changes"
	else
		echo "❌ Please commit or stash changes before pulling"
		exit 1
	fi
else
	echo "✅ No unstaged changes detected"
fi

branch_name=$(git rev-parse --abbrev-ref HEAD)

# Safely pull changes from the remote branch
if ! git pull origin "$branch_name" --rebase; then
	echo "❌ Failed to pull on repository"
	exit 1
fi

# Apply stashed changes if they were stashed
if [[ "$stash_changes" =~ ^[Yy]$ ]]; then
	if ! git stash pop; then
		echo "❌ Failed to apply stashed changes"
		exit 1
	fi
	echo "✅ Applied stashed changes"
fi

# Add and commit changes
read -p "Commit message (optional): " commit_msg
git add .

commit_msg=${commit_msg:-""}
if ! git commit --allow-empty-message -m "$commit_msg"; then
	echo "❌ Failed to commit"
	exit 1
fi

# Push changes to the remote repository
if ! git push --force origin "$branch_name"; then
	echo "❌ Failed to push to branch"
	exit 1
fi

echo "✅ Completed postgit for $repo_name/$branch_name"